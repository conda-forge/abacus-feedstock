{% set name = "abacus" %}
{% set version = "3.4.1" %}
{% set proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  git_url: https://github.com/deepmodeling/abacus-develop.git
  git_tag: v{{ version }}

build:
  script: |
    export CMAKE_PREFIX_PATH=`python -c "import torch;print(torch.__path__[0])"`/share/cmake:$CMAKE_PREFIX_PATH
    if [[ ${cuda_compiler_version} != "None" ]]; then
      export CMAKE_ARGS="-DUSE_CUDA=1 ${CMAKE_ARGS}"
    fi
    cmake -B conda_build ${CMAKE_ARGS} -DCMAKE_BUILD_TYPE=Release -DENABLE_DEEPKS=1 -DENABLE_LIBXC=1 -DENABLE_LIBRI=1
    cmake --build conda_build -j`nproc`
    cmake --install conda_build
  number: 1
  skip: true  # [not linux]
  # upstream is not ready
  skip: true  # [aarch64 and cuda_compiler_version != "None"]
  string: {{ proc_type }}_mpi_{{ mpi }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - make
    - cmake
    - llvm-openmp  # [osx]
    - libgomp      # [linux]

  host:
    - {{ mpi }}
    - openblas
    - elpa
    - elpa * mpi_{{ mpi }}_*
    - fftw
    - fftw * mpi_{{ mpi }}_*
    - cereal
    - pytorch
    - pytorch * {{ proc_type }}*
    - libxc-c
    - libxc-c * {{ proc_type }}_*

  run:
    - {{ mpi }}
    - scalapack
    - libopenblas
    - openblas
    - {{ pin_compatible('pytorch', max_pin='x.x') }} {{ proc_type }}*

test:
  commands:
    - export OMPI_MCA_plm=isolated OMPI_MCA_btl_vader_single_copy_mechanism=none OMPI_MCA_rmaps_base_oversubscribe=yes  # [mpi == "openmpi"]
    - abacus --version
    - mpirun -n 2 abacus --version  # [mpi == "mpich"]

about:
  home: https://abacus.ustc.edu.cn/
  doc_url: https://abacus.deepmodeling.com/
  dev_url: https://github.com/deepmodeling/abacus-develop
  license: LGPL-3.0-only AND MIT
  license_family: LGPL
  license_file:
    - LICENSE
    - libnpy.LICENSE
  summary: An electronic structure package based on plane wave and numerical atomic basis sets.
  description: >
    ABACUS (Atomic-orbital Based Ab-initio Computation at UStc) is an open-source package based on density functional theory (DFT). The package utilizes both plane wave and numerical atomic basis sets with the usage of norm-conserving pseudopotentials to describe the interactions between nuclear ions and valence electrons.
    ABACUS supports LDA, GGA, meta-GGA, and hybrid functionals. Apart from single-point calculations, the package allows geometry optimizations and ab-initio molecular dynamics with various ensembles.

extra:
  recipe-maintainers:
    - njzjz
    - caic99
